name: build-deploy-dbeaver

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}/nr-arch-templates
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}
  APP_NAME: 'dbeaver'
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE_NO_ENV: ${{ secrets.NAMESPACE_NO_ENV}}
  TARGET_ENV: "dev"
on:
  workflow_dispatch:

jobs:
  build-deploy-dbeaver-image:
    name: Build and Deploy Dbeaver Image.
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: dbeaver
    steps:
      
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        if: steps.check.outputs.build == 'true'
        uses: docker/setup-buildx-action@v2
      
      - name: Cache Docker layers
        if: steps.check.outputs.build == 'true'
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Log in to the Container registry
        if: steps.check.outputs.build == 'true'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Metabase image
        if: steps.check.outputs.build == 'true'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            "${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:latest"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: |
            ./dbeaver/Dockerfile
      - name: Deploy
        run: |
          set +e -ux
          # Login to OpenShift and select project
          oc login --token="${OPENSHIFT_TOKEN}" --server="${OPENSHIFT_SERVER}"

          # Process and Add Postgresql for dbeaver
          oc process -f "https://raw.githubusercontent.com/bcgov/${REPO_NAME}/main/dbeaver/dbeaver-postgres-deployment-config.yaml"  -p NAMESPACE="${OPENSHIFT_NAMESPACE_NO_ENV}"-"${TARGET_ENV}" -p DB_PVC_SIZE=200Mi \
          | oc create -f -

          # Process and apply deployment template
          oc process -f "https://raw.githubusercontent.com/bcgov/${REPO_NAME}/main/dbeaver/dbeaver.dc.yaml" -p NAMESPACE="${OPENSHIFT_NAMESPACE_NO_ENV}"-"${TARGET_ENV}" -p PREFIX="${METABASE_APP_PREFIX}" \
          | oc create -f -

          # Start rollout (if necessary) and follow it
          oc rollout latest dc/"${APP_NAME}" 2> /dev/null \
          || true && echo "Rollout in progress"
          oc logs -f dc/"${APP_NAME}"
          # Get status, returns 0 if rollout is successful
          oc rollout status dc/"${APP_NAME}"
