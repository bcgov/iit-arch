---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: "${REPO_NAME}-template"
metadata:
  name: "${REPO_NAME}-${JOB_NAME}-dc"
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${APP_NAME}-${JOB_NAME}"
      name: "${APP_NAME}-${JOB_NAME}"
    spec:
      replicas: ${{MIN_REPLICAS}}
      selector:
        app: "${APP_NAME}-${JOB_NAME}"
        deploymentConfig: "${APP_NAME}-${JOB_NAME}"
      strategy:
        resources: {}
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: quarkus-api
          labels:
            app: "${APP_NAME}-${JOB_NAME}"
            deploymentConfig: "${APP_NAME}-${JOB_NAME}"
        spec:
          containers:
            - image: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/quarkus-api-main:${TAG}
              imagePullPolicy: Always
              volumeMounts:
                - name: tls-certs
                  mountPath: "/etc/tls-certs"
                  readOnly: true
              readinessProbe:
                tcpSocket:
                  port: 8000
                initialDelaySeconds: 30
                periodSeconds: 10
                timeoutSeconds: 5
                failureThreshold: 20
                successThreshold: 1
              livenessProbe:
                httpGet:
                  path: /q/health
                  port: 8000
                initialDelaySeconds: 180
                periodSeconds: 30
                timeoutSeconds: 5
                failureThreshold: 5
                successThreshold: 1
              name: "quarkus-api-main"
              ports:
                - containerPort: ${{CONTAINER_PORT}}
                  protocol: TCP
              resources:
                requests:
                  cpu: "${MIN_CPU}"
                  memory: "${MIN_MEM}"
                limits:
                  cpu: "${MAX_CPU}"
                  memory: "${MAX_MEM}"
              env:
                - name: QUARKUS_DATASOURCE_JDBC_URL
                  value: "jdbc:postgresql://quarkus-api-pgsql:5432/quarkus"
                - name: QUARKUS_DATASOURCE_JDBC_USERNAME
                  value: "quarkus"
                - name: QUARKUS_DATASOURCE_JDBC_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "quarkus-api-pgsqltools"
                      key: "app-db-password"

          volumes:
            - name: tls-certs
              secret:
                secretName: quarkus-api-cert
      triggers:
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: "quarkus-api-cert"
      labels:
        app: "${APP_NAME}-${JOB_NAME}"
      name: "${APP_NAME}-${JOB_NAME}"
    spec:
      ports:
        - name: ${CONTAINER_PORT}-tcp
          port: ${{CONTAINER_PORT}}
          protocol: TCP
      selector:
        app: "${APP_NAME}-${JOB_NAME}"
        deploymentconfig: "${APP_NAME}-${JOB_NAME}"
  - apiVersion: autoscaling/v2beta1
    kind: HorizontalPodAutoscaler
    metadata:
      name: "${APP_NAME}-${JOB_NAME}-cpu-autoscaler"
    spec:
      scaleTargetRef:
        apiVersion: apps.openshift.io/v1
        kind: DeploymentConfig
        name: "${APP_NAME}-${JOB_NAME}"
        subresource: scale
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
      metrics:
        - type: Resource
          resource:
            name: cpu
            targetAverageUtilization: 200
parameters:
  - name: REPO_NAME
    description: Application repository name
    required: true
  - name: JOB_NAME
    description: Job identifier (i.e. 'backend' OR 'frontend')
    required: true
  - name: NAMESPACE
    description: Target namespace reference (i.e. 'k8vopl-dev')
    required: true
  - name: APP_NAME
    description: Application name
    required: true
  - name: CONTAINER_PORT
    description: The port on which the application will be accessible
    value: "8000"
    required: false
  - name: TAG
    description: The identifying tag for this specific deployment
    required: true
  - name: MIN_REPLICAS
    description: The minimum amount of replicas
    required: true
  - name: MAX_REPLICAS
    description: The maximum amount of replicas
    required: true
  - name: MIN_CPU
    description: The minimum amount of cpu
    required: true
  - name: MAX_CPU
    description: The maximum amount of cpu
    required: true
  - name: MIN_MEM
    description: The minimum amount of memory
    required: true
  - name: MAX_MEM
    description: The maximum amount of memory
    required: true
