apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: "${REPO_NAME}-postgres-template"
  app: "${APP_NAME}"
  template-owner: "nr-arch-templates"
metadata:
  name: "${REPO_NAME}-postgres"
parameters:
  - name: REPO_NAME
    description: Application repository name
    required: true
  - name: JOB_NAME
    description: Job identifier (i.e. 'backend' OR 'frontend')
    required: true
  - name: NAMESPACE
    description: Target namespace reference (i.e. 'k8vopl-dev')
    required: true
  - name: APP_NAME
    description: Application name
    required: true
  - description: Password for the PostgreSQL connection user.
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: DB_PASSWORD
  - description: Admin Password for the PostgreSQL connection user.
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: ADMIN_PASSWORD
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Database Volume Capacity
    name: DB_PVC_SIZE
    required: true
    value: 200Mi

objects:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-secret"
      labels:
        app: "${APP_NAME}"
        template-owner: "nr-arch-templates"
    stringData:
      database-name: "${APP_NAME}"
      database-password: "${DB_PASSWORD}"
      database-user: "${APP_NAME}"
      admin-password: "${ADMIN_PASSWORD}"
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-pvc"
      labels:
        app: "${APP_NAME}"
        template-owner: "nr-arch-templates"
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: "${DB_PVC_SIZE}"
      storageClassName: netapp-file-standard
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${APP_NAME}-postgres"
      labels:
        app: "${APP_NAME}"
        template-owner: "nr-arch-templates"
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: v12
          from:
            kind: DockerImage
            name: image-registry.openshift-image-registry.svc:5000/openshift/postgresql:12
          referencePolicy:
            type: Local
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${APP_NAME}-postgres"
      name: "${APP_NAME}-postgres"
    spec:
      replicas: 1
      selector:
        app: "${APP_NAME}-postgres"
        deploymentConfig: "${APP_NAME}-postgres"
      strategy:
        resources: { }
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: "${APP_NAME}-postgres"
          labels:
            app: "${APP_NAME}-postgres"
            deploymentConfig: "${APP_NAME}-postgres"
            template-owner: "nr-arch-templates"
        spec:
          containers:
            - image: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${APP_NAME}-postgres:v12
              name: "${APP_NAME}-postgres"
              metadata:
                name: "${APP_NAME}-postgres"
                labels:
                  app: "${APP_NAME}-postgres"
              ports:
                - containerPort: 5432
                  protocol: TCP
              env:
                - name: POSTGRESQL_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-secret"
                      key: admin-password
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-secret"
                      key: database-name
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-secret"
                      key: database-password
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${APP_NAME}-secret"
                      key: database-user
              volumeMounts:
                - name: "${APP_NAME}-pvc"
                  mountPath: "/var/lib/pgsql/data"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 5432
                timeoutSeconds: 1
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - pg_isready -h localhost -p 5432
                initialDelaySeconds: 20
                timeoutSeconds: 15
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
          volumes:
            - name: "${APP_NAME}-pvc"
              persistentVolumeClaim:
                claimName: "${APP_NAME}-pvc"
      triggers:
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "${APP_NAME}-postgres"
        template-owner: "nr-arch-templates"
      name: "${APP_NAME}-postgres"
    spec:
      ports:
        - name: "${APP_NAME}-postgres"
          nodePort: 0
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        app: "${APP_NAME}-postgres"
      sessionAffinity: None
      type: ClusterIP
